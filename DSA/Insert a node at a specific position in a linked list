Given the pointer to the head node of a linked list and an integer to insert at a certain position, create a new node with the given integer as its  attribute, insert this node at the desired position and return the head node.

A position of 0 indicates head, a position of 1 indicates one node away from the head and so on. The head pointer given may be null meaning that the initial list is empty.




Sample Input

3
16
13
7
1
2
Sample Output

16 13 1 7



SOLUTION:
def insertNodeAtPosition(llist, data, position):
    # Write your code here
    curpos = 1                                                          //Setting a value for the current position
    newnode = SinglyLinkedListNode(data)
    newnode.data = data                                                 //Creating a new node with the given data
    temp = llist
    while temp != None:                                                 //Iterating to the end of linked list
        if curpos == position:                                          //When position matches, we link the new node in break the loop
            newnode.next = temp.next
            temp.next = newnode
            break
        curpos += 1                                                     //If it does not match, we increment the position value and go to the next node of the linked list
        temp = temp.next
    return llist
