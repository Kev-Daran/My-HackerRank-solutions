Delete the node at a given position in a linked list and return a reference to the head node. The head is at position 0. The list may be empty after you delete the node. In that case, return a null value.





Sample Input

8
20
6
2
19
7
4
15
9
3
Sample Output

20 6 2 7 4 15 9


SOLUTION:
def deleteNode(head, position):
    cur = head
    if position == 0:               //Checking for 1st element
        return head.next
    else:
        prev = head                 //Setting a node that iterates one node before our checking node
        cur = head.next
        while cur:
            if position>1:         //Checking until poisition == 1 as our cur is 1 step ahead 
                prev = cur
                cur = cur.next    //Incrementing the value of cur and prev
                position-=1       //Decrementing the value of position
            else:
                prev.next = cur.next        //Linking the prev.next to cur.next to ignore the value of cur and then setting it to None to delete it effectively
                cur = None

        return head
